version: "3.9"

services:
  api01:
    networks:
      - rinha-network
    image: caravanacloud/rinhadebackend:latest
    hostname: api01
    container_name: api01
    environment:
      - DB_HOSTNAME=db
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://db:5400/rinha
      - QUARKUS_DATASOURCE_USERNAME=rinha
      - QUARKUS_DATASOURCE_PASSWORD=123
      - QUARKUS_DATASOURCE_JDBC_INITIAL_SIZE=100
      - QUARKUS_DATASOURCE_JDBC_MIN_SIZE=100
      - QUARKUS_DATASOURCE_JDBC_MAX_SIZE=110
    ports:
      - "9001:9990"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://api01:9990/_hc"]
      interval: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "70MB"

  api02:
    networks:
      - rinha-network
    image: caravanacloud/rinhadebackend:latest
    hostname: api02
    container_name: api02
    environment:
      - DB_HOSTNAME=db
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://db:5400/rinha
      - QUARKUS_DATASOURCE_JDBC_INITIAL_SIZE=100
      - QUARKUS_DATASOURCE_JDBC_MIN_SIZE=100
      - QUARKUS_DATASOURCE_JDBC_MAX_SIZE=110
      - QUARKUS_DATASOURCE_USERNAME=rinha
      - QUARKUS_DATASOURCE_PASSWORD=123
    ports:
      - "9002:9990"
    depends_on:
      db:
        condition: service_healthy
      api01:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://api02:9990/_hc"]
      interval: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "70MB"

  nginx:
    hostname: lb
    container_name: lb
    networks:
      - rinha-network 
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      api01:
        condition: service_healthy
      api02:
        condition: service_healthy        
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.20"
          memory: "20MB"

  db:
    networks:
      - rinha-network
    image: postgres:latest
    hostname: db
    container_name: db
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=rinha
      - POSTGRES_DB=rinha
    ports:
      - "5400:5400"
    expose:
      - "5400"
    #    volumes:
    #      - ./init.sql:/docker-entrypoint-initdb.d/init.sql -c max_connections=550
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096 -c max_connections=220 -c client_min_messages=error -c log_statement=none -c log_min_messages=panic -p 5400 
    deploy:
      resources: 
        limits:
          cpus: "0.5"
          memory: "390MB"
    healthcheck:
      test: ["CMD", "pg_isready", "--username", "rinha", "--port", "5400"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

networks:
  rinha-network:
